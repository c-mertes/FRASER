% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterExpression.R
\name{filtering}
\alias{filtering}
\alias{filterExpressionAndVariability}
\alias{filterExpression}
\alias{filterVariability}
\title{Filtering FraserDataSets}
\usage{
filterExpressionAndVariability(
  fds,
  minExpressionInOneSample = 20,
  quantile = 0.05,
  quantileMinExpression = 1,
  minDeltaPsi = 0,
  filter = TRUE,
  delayed = ifelse(ncol(fds) <= 300, FALSE, TRUE),
  BPPARAM = bpparam()
)

filterExpression(
  fds,
  minExpressionInOneSample = 20,
  quantile = 0.05,
  quantileMinExpression = 1,
  filter = TRUE,
  delayed = ifelse(ncol(fds) <= 300, FALSE, TRUE),
  BPPARAM = bpparam()
)

filterVariability(
  fds,
  minDeltaPsi = 0,
  filter = TRUE,
  delayed = ifelse(ncol(fds) <= 300, FALSE, TRUE),
  BPPARAM = bpparam()
)
}
\arguments{
\item{fds}{A FraserDataSet object}

\item{minExpressionInOneSample}{The minimal read count in at least one 
sample that is required for an intron to pass the filter.}

\item{quantile}{Defines which quantile should be considered for the filter.}

\item{quantileMinExpression}{The minimum read count an intron needs to have 
at the specified quantile to pass the filter.}

\item{minDeltaPsi}{Only introns for which the maximal difference in the psi 
value of a sample to the mean psi of the intron is larger than this value 
pass the filter.}

\item{filter}{If TRUE, a subsetted fds containing only the introns that 
passed all filters is returned. If FALSE, no subsetting is done and the 
information of whether an intron passed the filters is only stored in the 
mcols.}

\item{delayed}{If FALSE, count matrices will be loaded into memory, 
otherwise the function works on the delayedMatrix representations. The 
default value depends on the number of samples in the fds-object.}

\item{BPPARAM}{the BiocParallel parameters for the parallelization}
}
\value{
A FraserDataSet with information about which junctions passed the
filters. If \code{filter=TRUE}, the filtered FraserDataSet is returned.
}
\description{
This method can be used to filter out introns that are not 
reliably detected and to remove introns with no variablity between samples.
}
\section{Functions}{
\itemize{
\item \code{filterExpressionAndVariability}: This functions filters out both introns with low 
read support and introns that are not variable across samples.

\item \code{filterExpression}: This function filters out introns and corresponding 
splice sites that have low read support in all samples.

\item \code{filterVariability}: This function filters out introns and corresponding 
splice sites which do not show variablity across samples.
}}

\examples{
fds <- createTestFraserDataSet()
fds <- filterExpressionAndVariability(fds)

}
